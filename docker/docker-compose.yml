version: '3.9'
services:
  ######################
  # ZOOKEEPER + KAFKA  #
  ######################
  zookeper:
    image: docker.io/bitnami/zookeeper:3.7
    container_name: zookeeper
    hostname: zookeeper
    ports:
      - "2181:2181"
    volumes:
      - "zookeeper_data:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      net:
        ipv4_address: 10.0.0.10
  kafka:
    image: docker.io/bitnami/kafka:3
    ports:
      - "9092:9092"
    volumes:
      - "kafka_data:/bitnami"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://10.0.0.20:9092
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeper
    restart: on-failure
    networks:
      net:
        ipv4_address: 10.0.0.20

  ####################
  # DATA GENERATORS  #
  ####################
  data-generator-weather:
    image: data-generator-weather:latest
    container_name: datagenerator-weather
    hostname: datagenerator-weather
    environment:
      - TOKEN=<INSERT_OPEN_WEATHER_MAP_TOKEN_HERE>
    depends_on:
      - kafka
    networks:
      net:
        ipv4_address: 10.0.0.25

  data-generator-finance:
    image: data-generator-finance:latest
    environment:
      - TOKEN=<INSERT_ABLY_TOKEN_HERE>
    depends_on:
      - kafka
    networks:
      net:
        ipv4_address: 10.0.0.26


  #########
  # FLINK #
  #########
  flink-jobmanager:
    image: flink:1.13.5
    hostname: jobmanager
    ports:
      - "8877:8081"
      - "6123:6123"
    command: jobmanager
    environment:
      - JOB_MANAGER_RPC_ADDRESS=10.0.0.30
    networks:
      net:
        ipv4_address: 10.0.0.30

  flink-taskmanager:
    image: flink:1.13.5
    depends_on:
      - flink-jobmanager
    command: taskmanager
    environment:
      - JOB_MANAGER_RPC_ADDRESS=10.0.0.30
    networks:
      net:
        ipv4_address: 10.0.0.31


  ##########
  # INFLUX #
  ##########
  influxdb:
    image: influxdb:2.1.1
    ports:
      - "8086:8086"
    volumes:
      - "./influx:/docker-entrypoint-initdb.d"
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=admin
      - DOCKER_INFLUXDB_INIT_PASSWORD=admin123
      - DOCKER_INFLUXDB_INIT_ORG=ep
      - DOCKER_INFLUXDB_INIT_BUCKET=weather
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=GQjCO1YRjF1fcL4YfCp9
    networks:
      net:
        ipv4_address: 10.0.0.55

  ###########
  # GRAFANA #
  ###########
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    hostname: grafana
    restart: always
    ports:
      - "3000:3000"
    environment:
      - GF_INSTALL_PLUGINS=yesoreyeram-infinity-datasource
    depends_on:
      - kafka
    networks:
      net:
        ipv4_address: 10.0.0.60

############
# Networks #
############
networks:
  net:
    driver: bridge
    ipam:
      config:
        - subnet: 10.0.0.0/24

############
# Volumes  #
############
volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local